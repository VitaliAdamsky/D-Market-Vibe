// routes/coins.router.ts

// Импортируем Hono для создания роутера.
// Предполагается, что "hono" разрешается через ваш importMap.
import { Hono } from "hono";

// Импортируем обработчики контроллеров для монет.
// Предполагается, что "#controllers/" разрешается через ваш importMap,
// и что файл контроллера называется coins.controller.ts.
import {
  refreshCoinsCacheHandler, // Соответствует refreshCoinsCacheController из Express
  getCoinsHandler, // Добавлен обработчик для получения монет
} from "#coins/controllers/coins.controller.ts"; // Убедитесь, что это правильный путь к вашему файлу контроллера

// Создаем новый экземпляр роутера Hono.
// Это позволяет вам группировать маршруты и прикреплять их к основному приложению Hono.
const coinsRouter = new Hono();

/**
 * Маршрут для обновления кэша монет.
 * Использует HTTP-метод POST, так как это операция, изменяющая состояние (обновление кэша).
 * Запрос к этому маршруту вызовет логику получения, сжатия и кэширования данных о монетах.
 */
coinsRouter.post("/refresh", refreshCoinsCacheHandler);

/**
 * Маршрут для получения всех кэшированных данных о монетах.
 * Использует HTTP-метод GET, так как это операция получения данных.
 * Запрос к этому маршруту вернет текущие данные о монетах из кэша.
 */
coinsRouter.get("/", getCoinsHandler);

// Экспортируем роутер, чтобы его можно было использовать в основном приложении Hono.
export default coinsRouter;
