// config_operator.ts

// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º dotenv –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è.
// Deno –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å importMap –¥–ª—è —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è —ç—Ç–æ–≥–æ –ø—É—Ç–∏.
import { load } from "dotenv/mod.ts"; // <-- –î–æ–±–∞–≤–ª–µ–Ω–æ: –Ø–≤–Ω—ã–π –∏–º–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–∏ load
import { DopplerSDK } from "doppler-sdk";
import { AppConfig } from "#models/app-config.ts";

/**
 * –ü—Ä–æ—Å—Ç–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è –∫—ç—à–∞ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏.
 * –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ —ç—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª–µ–µ —Å–ª–æ–∂–Ω–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è LRUCache
 * –∏–ª–∏ –∏–º–ø–æ—Ä—Ç –∏–∑ —Å—Ç–æ—Ä–æ–Ω–Ω–µ–π –±–∏–±–ª–∏–æ—Ç–µ–∫–∏, –∫–∞–∫ –≤ –≤–∞—à–µ–º –∏—Å—Ö–æ–¥–Ω–æ–º —Ñ–∞–π–ª–µ `cache-utils.ts`.
 * –≠—Ç–æ—Ç –∫–ª–∞—Å—Å –∏–º–∏—Ç–∏—Ä—É–µ—Ç –±–∞–∑–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å set/get –¥–ª—è –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏.
 */
class ServantConfigCache<K, V extends object> {
  private cache = new Map<K, V>();
  private stdTTL: number; // –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –≤—Ä–µ–º—è –∂–∏–∑–Ω–∏ (Time To Live) –¥–ª—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∫—ç—à–∞

  constructor(options: { stdTTL: number }) {
    this.stdTTL = options.stdTTL; // –î–ª—è –ø—Ä–æ—Å—Ç–æ—Ç—ã, TTL –∑–¥–µ—Å—å –Ω–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω, –Ω–æ —Å–≤–æ–π—Å—Ç–≤–æ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç.
  }

  /**
   * –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –∫—ç—à –ø–æ –∑–∞–¥–∞–Ω–Ω–æ–º—É –∫–ª—é—á—É.
   * @param key –ö–ª—é—á, –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É –±—É–¥–µ—Ç —Ö—Ä–∞–Ω–∏—Ç—å—Å—è –∑–Ω–∞—á–µ–Ω–∏–µ.
   * @param value –ó–Ω–∞—á–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –Ω—É–∂–Ω–æ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å.
   */
  set(key: K, value: V): void {
    this.cache.set(key, value);
  }

  /**
   * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑ –∫—ç—à–∞ –ø–æ –∑–∞–¥–∞–Ω–Ω–æ–º—É –∫–ª—é—á—É.
   * @param key –ö–ª—é—á –∑–Ω–∞—á–µ–Ω–∏—è.
   * @returns –ó–Ω–∞—á–µ–Ω–∏–µ, —Å–≤—è–∑–∞–Ω–Ω–æ–µ —Å –∫–ª—é—á–æ–º, –∏–ª–∏ `undefined`, –µ—Å–ª–∏ –∫–ª—é—á –Ω–µ –Ω–∞–π–¥–µ–Ω.
   */
  get(key: K): V | undefined {
    return this.cache.get(key);
  }
}

/**
 * `ServantsConfigOperator` - —ç—Ç–æ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π –∫–ª–∞—Å—Å, –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–Ω—ã–π –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
 * –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è. –û–Ω –∑–∞–≥—Ä—É–∂–∞–µ—Ç —Å–µ–∫—Ä–µ—Ç—ã –∏–∑ Doppler, –∫—ç—à–∏—Ä—É–µ—Ç –∏—Ö
 * –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ –º–µ—Ç–æ–¥—ã –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏.
 * –≠—Ç–æ —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π –ø–æ–¥—Ö–æ–¥ –∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π –≤ Deno-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏.
 */
const env = await load();
export class ServantsConfigOperator {
  // –ü—Ä–∏–≤–∞—Ç–Ω—ã–µ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Å–≤–æ–π—Å—Ç–≤–∞ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏ —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤.
  // `_initialized` –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç, –±—ã–ª–∞ –ª–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞.
  private static _initialized: boolean = false;
  // `_config` —Ö—Ä–∞–Ω–∏—Ç —Ç–µ–∫—É—â—É—é –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.
  private static _config: AppConfig | null = null;
  // `_dopplerSdk` —Ö—Ä–∞–Ω–∏—Ç —ç–∫–∑–µ–º–ø–ª—è—Ä Doppler SDK –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è.
  private static _dopplerSdk: DopplerSDK | null = null;
  // `_cache` —è–≤–ª—è–µ—Ç—Å—è —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–º –Ω–∞—à–µ–≥–æ –∫—ç—à–∞ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏.
  private static _cache: ServantConfigCache<string, AppConfig>;
  // `_envLoaded` —Ñ–ª–∞–≥, —á—Ç–æ–±—ã –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å, —á—Ç–æ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑.
  private static _envLoaded: boolean = false;

  // –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π –±–ª–æ–∫ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏, –∫–æ—Ç–æ—Ä—ã–π –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –æ–¥–∏–Ω —Ä–∞–∑ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∫–ª–∞—Å—Å–∞.
  // –ó–¥–µ—Å—å –º—ã –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –Ω–∞—à –∫—ç—à.
  static {
    ServantsConfigOperator._cache = new ServantConfigCache<string, AppConfig>({
      stdTTL: 0, // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ TTL, 0 –æ–∑–Ω–∞—á–∞–µ—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∏—Å—Ç–µ—á–µ–Ω–∏—è.
    });
  }

  /**
   * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é —Å–µ—Ä–≤–∏—Å–æ–≤.
   * –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –≤—ã–ø–æ–ª–Ω—è–µ—Ç —Å–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:
   * 1. –ó–∞–≥—Ä—É–∂–∞–µ—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ —Ñ–∞–π–ª–∞ `.env` (–µ—Å–ª–∏ –µ—â–µ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã).
   * 2. –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ —Ç–æ–∫–µ–Ω–∞ Doppler (`SERVANTS_TOKEN`).
   * 3. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç Doppler SDK.
   * 4. –ü–æ–ª—É—á–∞–µ—Ç —Å–µ–∫—Ä–µ—Ç—ã –∏–∑ Doppler –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞ –∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è.
   * 5. –ü–∞—Ä—Å–∏—Ç –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ —Å–µ–∫—Ä–µ—Ç—ã –≤ –æ–±—ä–µ–∫—Ç `AppConfig`.
   * 6. –ö—ç—à–∏—Ä—É–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –µ–µ –≤ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–º —Å–≤–æ–π—Å—Ç–≤–µ `_config`.
   * 7. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ñ–ª–∞–≥ `_initialized` –≤ `true` –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏.
   * @throws {Error} –ï—Å–ª–∏ –Ω–µ —É–¥–∞–µ—Ç—Å—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é (–Ω–∞–ø—Ä–∏–º–µ—Ä, –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Ç–æ–∫–µ–Ω Doppler).
   */
  public static async initialize(): Promise<void> {
    try {
      // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏.
      if (!ServantsConfigOperator._envLoaded) {
        await load();
        ServantsConfigOperator._envLoaded = true;
      }

      // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω Doppler –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è.
      // –í –≤–∞—à–µ–º –∫–æ–¥–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª—Å—è `env.SERVANTS_TOKEN`, –∫–æ—Ç–æ—Ä—ã–π —è–≤–ª—è–µ—Ç—Å—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º `await load()`.
      // –ó–¥–µ—Å—å –º—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º `Deno.env.get` –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏.
      const dopplerAccessToken = env["SERVANTS_TOKEN"];
      if (!dopplerAccessToken) {
        throw new Error(
          "SERVANTS_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ .env –∏–ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –æ–Ω –Ω–∞—Å—Ç—Ä–æ–µ–Ω."
        );
      }

      // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Doppler SDK, –µ—Å–ª–∏ –æ–Ω –µ—â–µ –Ω–µ –±—ã–ª –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω.
      // –≠—Ç–æ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ—Ç —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤ SDK.
      if (!ServantsConfigOperator._dopplerSdk) {
        ServantsConfigOperator._dopplerSdk = new DopplerSDK({
          accessToken: dopplerAccessToken,
        });
      }

      // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–µ–∫—Ä–µ—Ç—ã –∏–∑ Doppler.
      // 'servants' - —ç—Ç–æ –∏–º—è –ø—Ä–æ–µ–∫—Ç–∞ Doppler, 'prd' - –æ–∫—Ä—É–∂–µ–Ω–∏–µ (production).
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–∏–≤–µ–¥–µ–Ω–∏–µ —Ç–∏–ø–∞ –∫ `Record<string, string>` –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–µ–∫—Ä–µ—Ç–∞–º.
      const secrets: Record<string, string> =
        (await ServantsConfigOperator._dopplerSdk.secrets.download(
          "servants",
          "prd"
        )) as Record<string, string>;

      // –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ `AppConfig` –∏–∑ –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö —Å–µ–∫—Ä–µ—Ç–æ–≤.
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ–ø–µ—Ä–∞—Ç–æ—Ä `|| ""` –¥–ª—è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –ø—É—Å—Ç—ã—Ö —Å—Ç—Ä–æ–∫ –≤ —Å–ª—É—á–∞–µ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è —Å–µ–∫—Ä–µ—Ç–∞,
      // –∏ `JSON.parse` –¥–ª—è –º–∞—Å—Å–∏–≤–æ–≤, –∞ `Number()` –¥–ª—è —á–∏—Å–ª–æ–≤—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π.

      const config: AppConfig = {
        redisUrl: secrets.UPSTASH_REDIS_REST_URL_I || "",
        redisToken: secrets.UPSTASH_REDIS_REST_TOKEN_I || "",
        tgUser: secrets.TG_USER || "",
        tgTech: secrets.TG_TECH || "",
        tgBusiness: secrets.TG_BUSINESS || "",
        allowedOrigins: JSON.parse(secrets.ALLOWED_ORIGINS || "[]") as string[],
        coinsApi: secrets.COINS || "",
        utilsApi: secrets.UTILS || "",
        coinsStoreApi: secrets.COINS_STORE || "",
        mongoDb: secrets.MONGO_DB || "",
        proxyMarketVibe: secrets.PROXY_MARKET_VIBE || "",
        renderOiServer: secrets.RENDER_OI_SERVER || "",
        limitKline: Number(secrets.LIMIT_KLINE) || 52,
        limitOi: Number(secrets.LIMIT_OI) || 52,
        limitFr: Number(secrets.LIMIT_FR) || 53,
        delayInMinutesShort: 5, // –≠—Ç–∏ –∑–Ω–∞—á–µ–Ω–∏—è –±—ã–ª–∏ –∂–µ—Å—Ç–∫–æ –∑–∞–¥–∞–Ω—ã –≤ –≤–∞—à–µ–º –∏—Å—Ö–æ–¥–Ω–æ–º –∫–æ–¥–µ.
        delayInMinutesLong: 10, // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Ö –∑–¥–µ—Å—å.
        projectName: "Bizzar-Market-Vibe", // –ò —ç—Ç–æ —Ç–æ–∂–µ.
      };

      // –ö—ç—à–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é.
      ServantsConfigOperator._cache.set("config", config);
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é —Ç–∞–∫–∂–µ –≤ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–º —Å–≤–æ–π—Å—Ç–≤–µ –¥–ª—è –ø—Ä—è–º–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞.
      ServantsConfigOperator._config = config;
      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –≤ true.
      ServantsConfigOperator._initialized = true;
      console.log("üíú ServantsConfigOperator ‚Üí –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ...");
    } catch (err) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:", err);
      // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–∏ –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏–∏ –æ—à–∏–±–∫–∏,
      // —á—Ç–æ–±—ã –ø–æ—Å–ª–µ–¥—É—é—â–∏–µ –≤—ã–∑–æ–≤—ã `getConfig` –≤—ã–±—Ä–∞—Å—ã–≤–∞–ª–∏ –æ—à–∏–±–∫—É.
      ServantsConfigOperator._initialized = false;
      throw err; // –ü–µ—Ä–µ–±—Ä–∞—Å—ã–≤–∞–µ–º –æ—à–∏–±–∫—É, —á—Ç–æ–±—ã –≤—ã–∑—ã–≤–∞—é—â–∏–π –∫–æ–¥ –º–æ–≥ –µ–µ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å.
    }
  }

  /**
   * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é —Å–µ—Ä–≤–∏—Å–æ–≤.
   * @returns {AppConfig} –ö—ç—à–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.
   * @throws {Error} –ï—Å–ª–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–µ –±—ã–ª–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞.
   */
  public static getConfig(): AppConfig {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª–∞ –ª–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ –∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –æ–Ω–∞.
    if (
      !ServantsConfigOperator._initialized ||
      !ServantsConfigOperator._config
    ) {
      throw new Error(
        "ServantsConfigOperator –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω. –í—ã–∑–æ–≤–∏—Ç–µ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π –º–µ—Ç–æ–¥ initialize() —Å–Ω–∞—á–∞–ª–∞."
      );
    }
    return ServantsConfigOperator._config;
  }

  /**
   * –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é —Å–µ—Ä–≤–∏—Å–æ–≤, –ø–æ–≤—Ç–æ—Ä–Ω–æ –≤—ã–∑—ã–≤–∞—è –º–µ—Ç–æ–¥ `initialize()`.
   * –≠—Ç–æ –ø–æ–ª–µ–∑–Ω–æ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –±–µ–∑ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –≤—Å–µ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è,
   * –Ω–∞–ø—Ä–∏–º–µ—Ä, –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å–µ–∫—Ä–µ—Ç–æ–≤ –≤ Doppler.
   */
  public static async reload(): Promise<void> {
    console.log("üîÑ ServantsConfigOperator ‚Üí –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...");
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø–µ—Ä–µ–¥ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–æ–π,
    // —á—Ç–æ–±—ã `initialize()` –≤—ã–ø–æ–ª–Ω–∏–ª –ø–æ–ª–Ω—É—é –∑–∞–≥—Ä—É–∑–∫—É.
    ServantsConfigOperator._initialized = false;
    await ServantsConfigOperator.initialize();
    console.log("‚úÖ ServantsConfigOperator ‚Üí –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–µ–Ω–∞.");
  }
}

// –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è (–¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏):
// –≠—Ç–æ—Ç –±–ª–æ–∫ –∫–æ–¥–∞ –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω, –µ—Å–ª–∏ —Ñ–∞–π–ª –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –Ω–∞–ø—Ä—è–º—É—é —á–µ—Ä–µ–∑ `deno run`.
// –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏, `ServantsConfigOperator.initialize()` –æ–±—ã—á–Ω–æ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è
// –æ–¥–∏–Ω —Ä–∞–∑ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –≤–∞—à–µ–≥–æ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∏–ª–∏ —Å–µ—Ä–≤–∏—Å–∞.
/*
if (import.meta.main) {
  (async () => {
    try {
      console.log("–ó–∞–ø—É—Å–∫ –ø—Ä–∏–º–µ—Ä–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è ServantsConfigOperator...");
      await ServantsConfigOperator.initialize();
      const config = ServantsConfigOperator.getConfig();
      console.log("–ü–æ–ª—É—á–µ–Ω–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è (–∏–º—è –ø—Ä–æ–µ–∫—Ç–∞):", config.projectName);
      console.log("–õ–∏–º–∏—Ç Kline:", config.limitKline);

      // –ü—Ä–∏–º–µ—Ä –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ (—Ä–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è):
      // console.log("\n–ü–æ–ø—ã—Ç–∫–∞ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...");
      // await ServantsConfigOperator.reload();
      // const newConfig = ServantsConfigOperator.getConfig();
      // console.log("–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–µ–Ω–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è (–∏–º—è –ø—Ä–æ–µ–∫—Ç–∞):", newConfig.projectName);

    } catch (error) {
      console.error("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å ServantsConfigOperator:", error);
    }
  })();
}
*/
